name: Maven Central Release
on:
  workflow_call:
    inputs:
      dry-run:
        type: boolean
        default: true
      JDK_VERSION:
        type: string
        default: 16
      JDK_DISTRIBUTION:
        type: string
        default: temurin
      MAVEN_SERVER_ID:
        type: string
    secrets:
      MAVEN_USERNAME:
        required: true
      MAVEN_PASSWORD:
        required: true
      MAVEN_GPG_PRIVATE:
        required: true
        
env:
  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  RELEASE_ARGS:  -DdryRun=${{ inputs.dry-run  }} -Darguments="-DskipTests -Dgpg.passphrase=" 

jobs:
  prepare:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup git
        run: |
          git config --global user.email "${{ github.actor }}@github.com"
          git config --global user.name "${{ github.actor }}"
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: ${{ inputs.JDK_DISTRIBUTION }}
          cache: maven
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE }}
      - name: mvn release:prepare
        run: mvn --batch-mode release:prepare ${{ env.RELEASE_ARGS }} -DpushChanges=false
      - name: Push
        run: |
          git push
          git push --tags
      - name: Save target
        uses: actions/upload-artifact@v3
        with:
          name: prepare
          path: |
            target
            release.properties
          retention-days: 1

  perform:
    needs: [prepare]
    runs-on: ubuntu-latest
    env:
      MAVEN_SERVER_ID: ${{ inputs.MAVEN_SERVER_ID }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        name: Setup MAVEN_SERVER_ID
        if: ${{ ! env.MAVEN_SERVER_ID }}
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: ${{ inputs.JDK_DISTRIBUTION }}
          cache: maven
      - if: ${{ ! env.MAVEN_SERVER_ID }}
        run: |
          MAVEN_SERVER_ID=$(mvn help:evaluate -Dexpression=project.distributionManagement.repository.id -q -DforceStdout)
          echo "MAVEN_SERVER_ID=$MAVEN_SERVER_ID"
          echo "MAVEN_SERVER_ID=$MAVEN_SERVER_ID" >> $GITHUB_ENV
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: ${{ inputs.JDK_DISTRIBUTION }}
          cache: maven
          server-id: ${{ env.MAVEN_SERVER_ID }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE }}
      - name: Restore target
        uses: actions/download-artifact@v3
        with:
            name: prepare
      - name: mvn release:perform
        if: ${{ ! inputs.dry-run }}
        run: mvn --batch-mode release:perform -DconnectionUrl=scm:git:${{ github.server_url }}/${{ github.repository }} ${{ env.RELEASE_ARGS }}
