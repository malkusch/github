name: Build
on:
  workflow_call:
    inputs:
      JDK_VERSION:
        type: string
        default: 16
      JDK_DISTRIBUTION:
        type: string
        default: temurin
      BUILD_TARGETS:
        type: string
        default: package
      ALLOW_PRIVILEGED_PORT:
        type: number
        required: false
    outputs:
      jar:
        value: ${{ jobs.build.outputs.jar }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar: ${{ steps.setJar.outputs.jar }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.JDK_VERSION }}
        distribution: ${{ inputs.JDK_DISTRIBUTION }}
        cache: maven
    - name: Build jar
      run: mvn --batch-mode --update-snapshots clean ${{ inputs.BUILD_TARGETS }} -Dmaven.test.skip
    - name: Set JAR_NAME
      run: |
        JAR_NAME=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar
        echo "JAR_NAME=$JAR_NAME"
        echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV
    - name: Save jar
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.JAR_NAME }}
        path: target/${{ env.JAR_NAME }}
        retention-days: 1
    - id: setJar
      run: echo "jar=$JAR_NAME" >> $GITHUB_OUTPUT
    - name: Build Tests
      run: mvn --batch-mode test -DskipTests=true
    - name: Save target
      uses: actions/upload-artifact@v3
      with:
        name: target
        path: target
        retention-days: 1

  unit-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: ${{ inputs.JDK_DISTRIBUTION }}
          cache: maven
      - name: Restore target
        uses: actions/download-artifact@v3
        with:
            name: target
            path: target
      - name: Allow privileged port
        if: ${{ inputs.ALLOW_PRIVILEGED_PORT }}
        run: sudo sysctl net.ipv4.ip_unprivileged_port_start=${{ inputs.ALLOW_PRIVILEGED_PORT }}
      - name: Test
        run: mvn --batch-mode test

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: ${{ inputs.JDK_DISTRIBUTION }}
          cache: maven
      - name: Restore target
        uses: actions/download-artifact@v3
        with:
            name: target
            path: target
      - name: Set Environment variables
        uses: oNaiPs/secrets-to-env-action@v1
        with:
            secrets: ${{ toJSON(secrets) }}
      - name: Allow privileged port
        if: ${{ inputs.ALLOW_PRIVILEGED_PORT }}
        run: sudo sysctl net.ipv4.ip_unprivileged_port_start=${{ inputs.ALLOW_PRIVILEGED_PORT }}
      - name: Test
        run: mvn --batch-mode failsafe:integration-test failsafe:verify -Dskip.surefire.tests
